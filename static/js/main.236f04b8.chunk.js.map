{"version":3,"sources":["components/GoodList/GoodList.tsx","App.tsx","index.tsx"],"names":["GoodsList","goods","className","map","good","goodsFromServer","App","useState","isVisible","setIsVisible","isReversed","setIsReversed","sortedBy","setSortedBy","type","onClick","copyGoods","sort","good1","good2","localeCompare","length","reverse","prepareGoods","ReactDOM","render","document","getElementById"],"mappings":"oMAMaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,oBAAIC,UAAU,OAAd,SACGD,EAAME,KAAI,SAAAC,GAAI,OACb,oBAEEF,UAAU,aAFZ,SAIGE,GAHIA,SCPTC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAkGaC,EA/FO,WACpB,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KA4CA,OACE,sBAAKX,UAAU,MAAf,WACIM,GACA,wBACEM,KAAK,SACLC,QA/CM,WACZN,GAAa,IA4CT,mBAQDD,GACC,qCACE,cAAC,EAAD,CAAWP,MAlCE,WACnB,IAAMe,EAAS,UAAOX,GAiBtB,OAfAW,EAAUC,MAAK,SAACC,EAAOC,GACrB,OAAQP,GACN,IAAK,WACH,OAAOM,EAAME,cAAcD,GAC7B,IAAK,SACH,OAAOD,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,MAITX,GACFM,EAAUM,UAGLN,EAgBiBO,KAElB,wBACET,KAAK,SACLC,QAvDM,WACdJ,GAAeD,IAoDT,qBAOA,wBACEI,KAAK,SACLC,QA1De,WACvBF,EAAY,aAuDN,iCAOA,wBACEC,KAAK,SACLC,QA7Da,WACrBF,EAAY,WA0DN,4BAOA,wBACEC,KAAK,SACLC,QAhEI,WACZJ,GAAc,GACdE,EAAY,KA4DN,0BCjGVW,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.236f04b8.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  goods: string[],\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul className=\"list\">\n      {goods.map(good => (\n        <li\n          key={good}\n          className=\"list__item\"\n        >\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useState } from 'react';\nimport './App.css';\nimport { GoodsList } from './components/GoodList/GoodList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [isVisible, setIsVisible] = useState(false);\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortedBy, setSortedBy] = useState('');\n\n  const start = () => {\n    setIsVisible(true);\n  };\n\n  const reverse = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const sortedByAlphabet = () => {\n    setSortedBy('alphabet');\n  };\n\n  const sortedByLength = () => {\n    setSortedBy('length');\n  };\n\n  const reset = () => {\n    setIsReversed(false);\n    setSortedBy('');\n  };\n\n  const prepareGoods = () => {\n    const copyGoods = [...goodsFromServer];\n\n    copyGoods.sort((good1, good2) => {\n      switch (sortedBy) {\n        case 'alphabet':\n          return good1.localeCompare(good2);\n        case 'length':\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      copyGoods.reverse();\n    }\n\n    return copyGoods;\n  };\n\n  return (\n    <div className=\"App\">\n      {!isVisible && (\n        <button\n          type=\"button\"\n          onClick={start}\n        >\n          Start\n        </button>\n      )}\n\n      {isVisible && (\n        <>\n          <GoodsList goods={prepareGoods()} />\n\n          <button\n            type=\"button\"\n            onClick={reverse}\n          >\n            Reverse\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={sortedByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={sortedByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}